@model DataAccess.Models.OrderModel

@{
    var defaultGridPageSize = 20;
    var gridPageSizes = "10,20,50,100,500";
}

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.CustomerId)
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <strong style="font-size: 16px">Order information</strong>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Created date</label>
                                </div>
                                <div class="col-md-8">
                                    <input type="datetime" id="@Html.IdFor(model => model.CreatedDateTime)" value="@Model.CreatedDateTime" />
                                    <input type="hidden" name="@Html.IdFor(model => model.CreatedDateTime)" value="@Model.CreatedDateTime" />
                                    @Html.ValidationMessageFor(model => model.CreatedDateTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Code</label>
                                </div>
                                <div class="col-md-8">
                                    <input disabled="disabled" type="text" id="@Html.IdFor(model => model.Code)" value="@Model.Code" style="width: 85%" />
                                    <input type="hidden" name="@Html.IdFor(model => model.Code)" value="@Model.Code" />
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Total amount</label>
                                </div>
                                <div class="col-md-8">
                                    <input disabled="disabled" type="text" id="@Html.IdFor(model => model.Amount)" value="$@string.Format("{0:#,#}", Model.Amount)" style="width: 85%" />
                                    <input type="hidden" name="@Html.IdFor(model => model.Amount)" value="@Model.Amount" />
                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Receiver</label>
                                </div>
                                <div class="col-md-8">
                                    <input disabled="disabled" type="text" id="@Html.IdFor(model => model.ReceiverName)" value="@Model.ReceiverName" style="width: 85%" />
                                    <input type="hidden" name="@Html.IdFor(model => model.ReceiverName)" value="@Model.ReceiverName" />
                                    @Html.ValidationMessageFor(model => model.ReceiverName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Phone</label>
                                </div>
                                <div class="col-md-8">
                                    <input disabled="disabled" type="text" id="@Html.IdFor(model => model.ReceiverPhone)" value="@Model.ReceiverPhone" style="width: 85%" />
                                    <input type="hidden" name="@Html.IdFor(model => model.ReceiverPhone)" value="@Model.ReceiverPhone" />
                                    @Html.ValidationMessageFor(model => model.ReceiverPhone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Address</label>
                                </div>
                                <div class="col-md-8">
                                    <input disabled="disabled" type="text" id="@Html.IdFor(model => model.ReceiverAddress)" value="@Model.ReceiverAddress" style="width: 85%" />
                                    <input type="hidden" name="@Html.IdFor(model => model.ReceiverAddress)" value="@Model.ReceiverAddress" />
                                    @Html.ValidationMessageFor(model => model.ReceiverAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Received date</label>
                                </div>
                                <div class="col-md-8">
                                    <input type="datetime" id="@Html.IdFor(model => model.ReceivedDateTime)" name="@Html.IdFor(model => model.ReceivedDateTime)" value="@Model.ReceivedDateTime" />
                                    @Html.ValidationMessageFor(model => model.ReceivedDateTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Approved date</label>
                                </div>
                                <div class="col-md-8">
                                    <input type="datetime" id="@Html.IdFor(model => model.ApprovedDateTime)" value="@Model.ApprovedDateTime" />
                                    <input type="hidden" name="@Html.IdFor(model => model.ApprovedDateTime)" value="@Model.ApprovedDateTime" />
                                    @Html.ValidationMessageFor(model => model.ApprovedDateTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Status</label>
                                </div>
                                <div class="col-md-8">
                                    <input id="@Html.IdFor(model => model.Status)" style="width: 85%" />
                                    <input type="hidden" name="@Html.IdFor(model => model.Status)" value="@Html.AttributeEncode(Model.Status)" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Deliver</label>
                                </div>
                                <div class="col-md-8">
                                    <input id="@Html.IdFor(model => model.DeliverId)" name="@Html.IdFor(model => model.DeliverId)" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label class="control-label">Approved by</label>
                                </div>
                                <div class="col-md-8">
                                    <input id="@Html.IdFor(model => model.ApproverId)" style="width: 85%" />
                                    <input type="hidden" name="@Html.IdFor(model => model.ApproverId)" value="@Html.AttributeEncode(Model.ApproverId)" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-group">
            <strong style="font-size: 16px">Product list</strong>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="main-grid"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $("#@Html.IdFor(model => model.CreatedDateTime)").kendoDatePicker({
            culture: "vi-VN",
            format: "dd-MM-yyyy HH:mm:ss"
        }).data("kendoDatePicker").enable(false);

        var data = [
            { text: "Approved", value: "False" },
            { text: "Not approved", value: "True" }
        ];
        $("#@Html.IdFor(model => model.Status)").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: data,
            value: "@Model.Status",
            enable: false
        });

        $("#@Html.IdFor(model => model.ReceivedDateTime)").kendoDatePicker({
            culture: "vi-VN",
            format: "dd-MM-yyyy HH:mm:ss"
        });

        $("#@Html.IdFor(model => model.ApprovedDateTime)").kendoDatePicker({
            culture: "vi-VN",
            format: "dd-MM-yyyy HH:mm:ss"
        }).data("kendoDatePicker").enable(false);;

        $("#@Html.IdFor(model => model.DeliverId)").kendoDropDownList({
            dataTextField: "UserName",
            dataValueField: "Id",
            dataSource: {
                type: "json",
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/User/GetAllAdminUser"
                    }
                }
            },
            value: "@Model.DeliverId"
        });

        $("#@Html.IdFor(model => model.ApproverId)").kendoDropDownList({
            dataTextField: "UserName",
            dataValueField: "Id",
            optionLabel: " ",
            enable: false,
            dataSource: {
                type: "json",
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/User/GetAllAdminUser"
                    }
                }
            },
            value: "@Model.ApproverId"
        });

        $(document).ready(function () {
                        $("#main-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("OrderDetailList", "Order", new { orderId = Model.Id }))",
                                        type: "POST",
                                        dataType: "json"
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)],
                                messages: {
                                    itemsPerPage: "Number of product on the page",
                                    empty: "No product",
                                    display: "{0} - {1} of {2} product",
                                },
                            },
                            filterable: false,
                            sortable: false,
                            columns: [
                                {
                                    template: '<img src="../../../..#=ProductImagePath#" width="100px" alt="image" />',
                                    width: 120,
                                    title: "Image",
                                    field: "ProductImagePath"
                                }, {
                                    field: "ProductCode",
                                    title: "Code"
                                }, {
                                    field: "ProductName",
                                    title: "Name"
                                }, {
                                    field: "UnitPrice",
                                    title: "Unit price",
                                    format: "{0:$#,#}"
                                }, {
                                    field: "Quantity",
                                    title: "Quantity",
                                    format: "{0:#,#}"
                                }, {
                                    field: "SubAmount",
                                    title: "Amount",
                                    format: "{0:$#,#}"
                                }
                            ]
                        });
        });
    });

</script>






